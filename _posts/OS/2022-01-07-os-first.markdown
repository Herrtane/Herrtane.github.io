---
layout: post
title: <OS> 01. 운영체제의 소개
date: 2022-01-07 23:50:23 +0900
category: OS
comments: true
---

데이터베이스 포스팅을 마무리하고, 예상대로 운영체제를 공부했던 것들을 복습하면서 블로그 포스팅으로 정리한다. 바로 시작하겠다.

## 운영체제란? 

- 사용자와 하드웨어 사이의 중간 매개체로 응용 프로그램의 실행을 제어하고, 자원을 할당 및 관리하며, 입출력 제어 및 데이터 관리와 같은 서비스를 제공하는 소프트웨어 

### 운영체제의 발전 목적 

1. 편리성 : 사용자에게 편리한 환경 제공
2. 효율성 : 시스템 성능 향상 (처리량 향상, 지연&응답시간 단축, 신뢰도 향상, 사용 가능도 향상)
3. 제어 서비스 향상 : 입출력장치의 동작 관리 및 제어, 시스템 오류 예방 

* 지연&응답시간 : 일괄처리 시스템에서는 turn around time이라고 함. 

## 운영체제의 기능 

### 자원 관리 

1. 메모리 관리 : 메인 메모리 및 보조기억장치 관리
2. 프로세스 관리
3. 주변장치 (입출력장치) 관리
4. 파일(데이터) 관리 

### 시스템 관리 

1. 시스템 보호 (사용자 권한 부여)
2. 네트워킹 (통신)
3. 명령 해석기 (command interpreter) : 사용자가 입력한 명령을 해석 

## 운영체제의 발전 과정과 유형 

- 1940 : 운영체제 없음
- 1950 : 일괄 처리 시스템 (batch), 버퍼링, 스풀링 (spooling, simultaneous peripheral operation on-line) 

* 버퍼링과 스풀링의 차이점과 목적
: 두 방법 모두 프로세서(CPU)와 입출력장치의 속도차이를 보완하기 위한 목적.
: 버퍼는 주기억장치 내에 존재하고, 스풀은 디스크의 일부인 스풀공간을 매우 큰 버퍼처럼 사용. 

- 1960 : 다중 프로그래밍 (여러 프로그램을 메모리에 나눠 적재한 이후, 프로세서를 번갈아 할당하여 동시에 실행), 시분할 (다중 프로그래밍에 사용시간을 추가), 다중 처리 (하나의 시스템에서 프로세서를 여러개 사용), 실시간 시스템 (즉시 응답)
- 1970 : 다중모드 (위의 4가지 시스템을 모두 제공), 범용 시스템
- 1980, 1990 : 분산 처리 시스템, 병렬 계산과 분산 계산
- 2000 이후 : 모바일 및 임베디드, 가상화 및 클라우드 컴퓨팅 

* 가상화의 종류
- 호스트 기반 가상화 : 가상 머신
- 베어메탈 (bare-metal) 기반 가상화 : 호스트 운영체제 전에 하이퍼바이저 (hypervisor)를 통해 다중 OS를 운영 

### 운영체제의 유형 

1. 일괄 처리 시스템
2. 다중 프로그래밍 시스템
3. 시분할 시스템 (TSS, Time Sharing System)
4. 다중 처리 시스템
5. 실시간 처리 시스템
6. 분산 처리 시스템 (distributed processing system) 

## 운영체제의 서비스 

1. 부팅 서비스
2. 사용자 서비스 : CLI, 메뉴, GUI 등의 인터페이스 제공, 프로그램 실행, 입출력 동작 수행, 통신, 파일 시스템, 오류 탐지
3. 시스템 서비스 : 자원 할당, 계정, 보호와 보안
4. 시스템 호출 : API 

## 운영체제의 구조 

1. 단일 구조 : 운영체제의 모든 기능을 커널과 동일한 메모리 공간에 적재한 후, 시스템 호출만으로 사용. 보안 위험성과 버그 위험성 높음
2. 계층 구조 : 비슷한 기능을 수행하는 요소를 그룹화하여 계층적으로 구성. 단일 구조보다는 성능이 떨어지지만, 보안이 뛰어나고, 오류에 강함. 모듈화가 특징.
3. 마이크로 커널 구조 : 커널에 최소 기능만 포함시키고, 기타 기능은 사용자 공간으로 옮겨 사용자 영역에서 수행하는 서버 구현 방법. 모듈화가 높으나, 역시 모듈 간 통신의 빈번도에 따라 성능이 떨어질 수 있음.