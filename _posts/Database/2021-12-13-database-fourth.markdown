---
layout: post
title: <Database> 08. 데이터베이스 설계와 ER모델
date: 2021-12-13 21:30:23 +0900
category: Database
comments: true
---

## 데이터베이스 설계 

- 훌륭한 데이터베이스 설계는 관심의 대상이 되는 실세계를 잘 나타내는 것.
- 과정은 아래와 같음.
1. 요구사항 수집과 분석
2. 개념적 설계
3. 논리적 설계
4. 정규화
5. 물리적 설계
6. 보안 설계
7. 구현
- 논리적 설계를 기준으로 하여 윗단계는 DBMS에 독립적이고, 아랫단계는 DBMS에 의존적임.
- 개념적 설계 단계에서는 스키마 정보만 고려하고, 인스턴스는 고려하지 않음. 대표적으로 ER모델이 사용됨.
- 논리적 설계 단계에서는 개념적 설계 단계에서 채택한 모델을 바탕으로 DBMS에 맞게 관계 데이터베이스 스키마로 매핑함.
- 정규화 단계에서는 ER스키마를 변환해서 얻은 관계 스키마를 더 정제하는 과정을 거침.
- 물리적 설계 단계에서는 저장구조와 인덱스 등 성능과 관련된 부분을 설계하고 수정하는 과정을 거침. 

## ER모델 

- 실세계를 엔티티, 애트리뷰트, 엔티티들 간의 관계로 표현하는 모델. 

### 엔티티 타입 

- 동일한 애트리뷰트들을 가진 엔티티들의 모임으로, ER다이어그램에서 직사각형으로 나타냄. 
- 강한 엔티티 타입 : 독자적으로 존재. 자신의 키 애트리뷰트를 사용하여 고유하게 엔티티들을 식별 가능.
- 약한 엔티티 타입 : 키를 형성하기에 충분한 애트리뷰트들을 갖지 못한 엔티티타입. 소유 엔티티 타입이 있어야함. 예를 들면, 학생 릴레이션에서 학생의 가족들은 다른 학생의 가족들과 이름이 같을 수 있으므로, 해당 학생에 속하는 엔티티 타입으로 취급. 그 가족 내에서는 이름이 부분적으로 고유하므로, 부분키(partial key)를 가질 수 있음. ER다이어그램에서 이중선 직사각형으로 표기함. 

### 애트리뷰트 

- 애트리뷰트 : 각 엔티티가 가지고 있는 특징, 속성. 
- 단순 애트리뷰트 (simple attribute) : ER다이어그램에서 실선 타원으로 표현.
- 복합 애트리뷰트 (composite attribute) : ER다이어그램에서 복합 애트리뷰트는 두개 이상의 애트리뷰트들로 이루어짐. 예를 들면, Address 애트리뷰트는 시, 구, 동, 우편번호로 나눌 수 있으므로 복합 애트리뷰트임. 만약 주소 전체를 하나의 단순 애트리뷰트로 지정하면 문자열이 길어지고 분석하기가 어려워질 것임.
- 단일값 애트리뷰트 (single - valued attribute) : ER다이어그램에서 단순 애트리뷰트와 동일하게 표현.
- 다치 애트리뷰트 (multi - valued attribute) : ER다이어그램에서 이중선 타원으로 표현. 각 엔티티마다 여러 개의 값을 가질 수 있는 애트리뷰트. 예를 들면, 취미 애트리뷰트는 여러 개의 취미가 존재할 수 있음.
- 저장된 애트리뷰트 (stored attribute) : ER다이어그램에서 단순 애트리뷰트와 동일하게 표현. 다른 애트리뷰트와 독립적으로 존재하며, 대부분의 애트리뷰트들이 이것임.
- 유도된 애트리뷰트 (derived attribute) : ER다이어그램에서 점선 타원으로 표현. 다른 애트리뷰트의 값으로부터 얻어진 애트리뷰트. 예를 들면, 나이 애트리뷰트는 주민등록번호 애트리뷰트로부터 유도될 수 있음. 데이터의 불일치를 유발할 수 있으므로, 가급적 릴레이션에 포함시키지 않는 것이 좋음. 

### 관계와 관계 타입 

- 하나의 엔티티 자체는 다른 엔티티와 관련될 수 있음. 학생 엔티티는 반 엔티티에서 수업을 들음. 이를 엔티티들 간의 관계라고 함.
- 데이터베이스에는 학생, 반에 관한 데이터뿐만 아니라, 둘의 관계에 대한 데이터도 저장해야 함.
- ER다이어그램에서 다이아몬드로 표현.
- 관계의 특징을 기술하는 애트리뷰트들을 표기할 수 있음. 다이아몬드에 실선으로 연결된 애트리뷰트. 예를 들면, 학생이 반에서 수업을 들을 때, 수업 관계 타입에서 수강 시간이라는 애트리뷰트가 존재할 수 있음.
- 차수(degree) : 관계로 연결된 엔티티 타입들의 개수.
- 카디날리티 비율 : 두 개의 엔티티 타입이 서로 몇 대 몇의 비율로 연관되는지를 나타내는 것. 1:1, 1:N, M:N으로 구분.
- 전체참여와 부분참여 : 어떤 관계에 엔티티 타입 E1의 일부 엔티티만 참여하면 부분참여, 전체가 참여하면 전체참여라고 함. 전체참여는 ER다이어그램에서 이중 실선으로 표시. 

### 새발(crow-feet)표기법 

- ER표기법을 간단하게 나타낸 또다른 표기법으로, 자세한 표기법 관련 내용은 생략함. 

## ER-릴레이션 사상 알고리즘 

- ER 다이어그램을 릴레이션으로 사상해서 논리적 설계를 거치는 과정.
- ER 다이어그램이 개념적 설계였다면, 이 과정이 논리적 설계임.
- 추가적으로 정규화를 통해 릴레이션을 정제화하는 과정을 거침. 정규화는 다음 포스팅에서 다루겠음.