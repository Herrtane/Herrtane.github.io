---
layout: post
title: 공부 진행 상황
date: 2020-12-09 22:47:23 +0900
category: Diary
comments: true
---

## 공부 진행 상황 : TCP/IP 소켓 프로그래밍, Linux의 Vim, 그리고 Cocos2d-x

훈련소를 다녀오면서 지난 한달동안 틈틈히 새로운 공부에 전념하고 있다. 우선, 친구한테 선물받은 책인 'TCP/IP 소켓 프로그래밍'책은 이제 IOCP 직전 챕터인 막바지에 접어들었다. 한달동안 정말 집중하면서 공부했던 책이기 때문에 상당히 학습 성과에 만족하고 있다. 얼른 제대로 된 채팅프로그램을 만드는 것이 나의 목표이다.

<br/>

다음으로, 위에서 언급한 소켓 프로그래밍을 Linux 환경에서 학습하기 위해서, 그동안 한번도 접해보지 못했던 Linux 상에서의 C프로그래밍을 덩달아 같이 공부하게 되었다. Windows에서 당연하게 여겨왔던 Visual Studio같은 IDE가 Linux에서는 아예 존재하지 않아서 처음에 어떻게 해야하나 상당히 당황했는데, 검색을 통해서 Linux 상에서는 IDE말고 Vi(m)이라는 텍스트 에디터로 c파일을 코딩한 후, gcc 혹은 clang 컴파일러로 컴파일하는 방식으로 진행한다는 것을 알게 되었다. 

<br/>

처음 Vim을 사용할 때는 정말 지나칠 정도로 어색하고 불편했다. '굳이 마우스를 놔두고 왜 키보드만 이용해서 이상한 명령어들을 외우고 해야 되는가?', 'Visual Studio가 진심으로 그립다..' 등의 생각으로 머릿속이 가득찼다. 그러나 얼마가지 않아 한편으로는 수 많은 개발자들이 Vim을 극찬하는 이유가 너무도 궁금해서 오기가 생겨서 Vim에 익숙해지기로 마음을 먹었고, Vimtutor라는 Linux 프로그램을 통해서 Vim에 순식간에 익숙해질 수 있었다. 정말 잘 만든 튜토리얼이라고 느꼈다! 

<br/>

Vim에 익숙해지고 나니, 왜 사람들이 그토록 극찬한 텍스트 에디터인지 실감할 수 있었다. 마우스로 손이 가는 것 조차 귀찮을 정도로 키보드 안에서 모든 작업을 효율적으로 할 수 있고, 명령어들을 통해서 손쉽게 원하는 만큼 코드를 수정할 수 있어서 아주 마음에 들었다. 현재는 기회가 되는 대로 Windows에 설치된 Visual Studio에 Vim관련 플러그인이 존재하는지 알아보고 바로 설치할 예정인 만큼 Vim이 편해졌다. 덩달아서 gcc 컴파일러도 익숙해져서, Linux의 CLI환경이 아주 마음에 드는 상태이다. 아마 조만간 이 블로그에 소켓 프로그래밍과 Vim 관련 글을 정리해서 올릴 예정이니, 그때 자세하게 내가 공부했던 사용법을 포스팅하겠다.

<br/>

마지막으로, 이번 소켓 프로그래밍 책을 1회독 하고나면, 다른 새로운 공부를 병행하면서 동시에 본격적으로 게임 엔진을 이용해서 나만의 게임을 하나 제작하려는 계획을 오래전부터 가지고 있었다. 다만, 가장 큰 고민은 Unity와 Unreal Engine이 나한테는 너무 무겁게 느껴진다는 것이었다. 지난해에 '게임 UI/UX 프로그래밍'이라는 수업을 학교에서 들을 때에 Unity를 한참 다뤘었는데, 재밌고 편한 툴이면서도 엔진과 실행파일의 무게가 제법 나가서 부담이 되었었다. 뿐만 아니라, 나는 C/C++을 주력 언어로 삼아서 깊게 게임 프로그래밍을 시도해보고 싶은데, Unity는 아쉽게도 C#을 바탕으로 프로그래밍이 이루어져서 조금 불편했다. 나중에 내가 Unity를 바탕으로 더 큰 프로젝트를 진행할 때는 C#에 더 익숙해져야겠지만, 현재까지는 C/C++을 바탕으로 전공 수업을 진행해왔고, 소켓 프로그래밍도 공부하고 있고, 자료구조 역시 이 언어들로 진행했기 때문에, Unity는 잠시 제쳐두고 싶었다.

<br/>

Unreal Engine은 더 무겁다고 소문이 났다.. 비록 C++을 다루는 엔진이지만, Unity도 무거운데 Unreal Engine으로 다룰 생각을 하니 앞이 까마득했다(물론 과장이 섞인 표현이다.). 무엇보다도 나의 관심사는 2D게임이지, 3D게임이 아니다. 이 두 엔진은 3D에 특화된 엔진이라 그다지 마음이 가지 않았다. 그러다가 나의 고충을 토대로 검색해서 알게된 Cocos2d-x 엔진이 내 마음을 사로잡았다.

- 상대적으로 가벼운 엔진
- 오픈소스이면서 MIT 라이센스라 완전히 무료
- C++이 주력인 엔진
- 진입장벽이 높지만, 그만큼 매력적인 엔진

이 4가지 특성때문에 어제부터 곧바로 Cocos2d를 다운받고 사용법을 익히기 시작했다. 물론, 아직 소켓 프로그래밍을 위주로 학습하기 때문에, 설치와 기본 사용법만 공부한 이후로는 잠시 Cocos2d는 제쳐둘 예정이다만, 머지 않아서 바로 이 엔진을 적극적으로 파볼 생각이다.

<br/>

이야기가 참 길어졌는데, 지난 한달동안 나의 자취를 기록해놓고 싶었고, 또 적다보니 내가 나름대로 열심히 살았구나 하는 마음이 느껴져서 신나서 길게 적은 것 같다. 매번 느끼지만, 컴퓨터공학으로 나의 진로를 결정한 것이 참 감사하고 만족한다. 매번 흥미와 재미의 연속이다!