---
layout: post
title: <Firmware> 5. Shell script 관련 정리 (2)
date: 2024-10-02 2:30:23 +0900
category: Embedded/Kernel
comments: true
---

## Shell script

**자동화** 관련 작업을 진행할 때, shell script가 얼마나 강력한지 이번 연구를 통해 체감할 수 있었다. 반복되는 작업의 양을 매우 간편하게 줄여줄 수 있는 스크립트이고, 익히는 데도 전혀 어렵지 않아서, 이전 포스팅에 이어서 추가적으로 몇가지 기억하면 좋을 사항들을 적어놓는다.

### 따옴표

1. 작은 따옴표('')를 사용해야 할 때
    - 문자열 그 자체가 존중되고 싶을 때
    - 작은 따옴표 내에서는 Bash에서 선언한 변수 사용이 불가능하다.
2. 큰 따옴표("")를 사용해야 할 때
    - 큰 따옴표 내에서는 Bash에서 선언한 변수 사용이 가능하다.
3. 백틱(``)을 사용해야 할 때
    - $()와 함께 Command substitution으로 분류되는 표현식
    - **권장하지 않음**

### 중괄호

변수를 활용할 때, $를 변수명 앞에 두어서 변수임을 나타내는데, 변수명에 중괄호로 감싸도 정상 동작을 한다. 그렇다면 차이점이 무엇일까? 만약 중괄호로 묶지 않는다면, 비정상적인 동작이 아래와 같이 발생할 수 있다.

```bash
var="hello"
echo "yo$varman"
```

내가 의도한 결과는 yohelloman이지만, 중괄호로 묶지 않아서 쉘 입장에서는 varman이라는 변수로 인식하게 되었다. 해당 변수는 선언되어있지 않아서 공백으로 치환되는 문제가 발생한다. 따라서, 확실하게 **중괄호로 구분짓는 것이 중요**하다.

### Shell expansion - Parameter expansion

**Shell expansion**은 쉘에서 프로그램을 실행하기 전에 입력 받은 문자들 중에서 **약속된 특수 문자**들을 추려내서 정해진 의미로 재해석하여 입출력하는 것을 의미한다. Parameter expansion외에도 여러가지 expansion이 존재하나, 내가 지금 정리할 것은 Parameter expansion이다.

<br/>

**Parameter expansion**은 어떤 파라미터 혹은 변수에 여러가지 작업을 통해서 얻을 수 있는 결과를 쉽게 얻을 수 있도록 도와주는 **확장 기능**이다. 변수 확장이라고도 불린다. 쉘스크립트에서 파일 이름이나 확장자를 분리하는 등 다양한 용도로 사용된다.

```bash
${parameter#}, ${parameter##}
# #은 앞에서부터 패턴을 찾아간다.
# #은 맨 앞의 패턴만, ##은 모든 패턴을 찾는다.
# 패턴에 매칭된 부분은 제거된다.

${parameter%}, ${parameter%%}
# %은 뒤에서부터 패턴을 찾아간다.
# %은 맨 뒤의 패턴만, %%은 모든 패턴을 찾는다.
# 패턴에 매칭된 부분은 제거된다.

${parameter//[대체전 문자열]/[대체후 문자열]}
# 특정 패턴의 문자열을 대체할 때 사용한다.
```

## Conclusion

쉘스크립트는 쓰면 쓸수록 상당히 편하다고 느낀다. 앞으로도 필요한 부분은 잘 정리해두려고 한다.