---
layout: post
title: <System Hacking> 02. 배경지식
date: 2021-06-28 23:50:23 +0900
category: System_Hacking
comments: true
---

## 생활코딩, 해커스쿨 F.T.Z Training에서 취합한 유용한 정보들

### 리눅스 디렉토리 구조

- bin : ls, rm같은 가장 필수적인 리눅스 실행파일(바이너리)들이 들어있음.
- sbin : 기본 명령을 제외한 시스템 관리용 실행 파일들이 들어있음.
- tmp : 임시로 파일을 저장하는 디렉토리. 누구나 이곳에 파일을 생성할 수 있음.
- usr : 다양한 응용 프로그램들이 설치되어있음.
- boot : 리눅스 부팅 관련 파일들, 커널이 들어있음.
- dev : 컴퓨터에 설치된 하드웨어에 관한 정보들이 파일 형태로 저장되어 있음.
- home : 일반 사용자들의 디렉토리가 들어있음.
- lib : 라이브러리 파일들이 들어있음.
- mnt : mount명령어를 통해 마운트시킨 보조기억장치들이 들어있음.
- root : root의 디렉토리
- proc : 프로세스들이 파일 형태로 저장되어 있음.
- var : 시스템 운영 중에 생성되는 각종 임시 파일들이 들어있음. 외부 접속에 대한 로그 파일들이 이곳에 저장됨.
- etc : 중요한 설정 파일들이 들어있음.
    - /etc/passwd : 사용자들에 대한 간단한 정보가 들어있음.
    - /etc/shadow : 사용자들의 패스워드가 숨겨져있음.
    - /etc/services : 서버가 어떤 서비스를 하는 중인지 보여줌.
    - /etc/issue.net : 처음 접속될 때 나오는 화면.
    - /etc/motd : 로그인 후에 나오는 메시지가 들어있음.
    - ~/public_html : 각 사용자들의 홈페이지 파일이 들어있음. 

### 리눅스 파일 압축

- tar : 하나의 파일로 묶음 (압축은 아님) -> 백업용으로 자주 쓰임
    - tar cvf [ 합칠파일 ] [ 합칠파일들 ] 
    - tar xvf [ 해제할파일 ]
    - c - create
    - x - extract
    - v - view : 압축/해제 과정을 보여줌
    - f - file
 
- gzip : 한번에 한개의 파일만 압축할 수 있으므로, tar를 사용하여 여러 파일을 1개로 묶고, gzip 프로그램을 사용하여 용량을 줄이도록 압축함.
    - gzip [ 파일 ]  : 압축
    - gzip -d [ 파일 ]  : 압축 해제 

- tar.gz (tgz) 확장자가 최종 압축파일의 형태. 이 파일을 압축 해제할 때는, 위 과정을 역순으로 진행하면 됨.

### 해킹, SetUID에 관하여

- Remote 해킹 : 서버에 계정을 가지고 있지 않을 때, 계정을 얻고자 시도하는 것이 목적.
- Local 해킹 : 서버에 계정을 가지고 있을때, root권한을 얻기 위해 시도하는 것이 목적.
    - SetUID : 일시적으로 자신의 ID를 변경하는 것
    - race condition, BOF, link bug, IFS bug, format string attack 등의 기법들이 존재
    - SetUID에 대한 자세한 내용은 앞으로의 포스팅에서 계속 다룰 예정

### 기타 유용한 정보들

- 프롬프트
    > [접속ID@서버 현재위치]$
- drwxr-xr-x    1   root    herrtane    994 9월 24  11:40   temp.txt 에서 중간 994는 용량을 나타냄
- .는 현재 디렉토리, ..은 상위 디렉토리, /은 최상위 디렉토리를 나타냄
- 패스워드 파일
    > root : x : 0 (컴퓨터에 입력되는 사용자 아이디) : 0 (그룹) : Admin (사용자의 이름) : /root (로그인시 첫 디렉토리) : /bin/bash (로그인시 실행할 프로그램)
- ls -l : 디렉토리와 파일을 구분하여 출력
- ls -a : 숨겨진 파일까지 모두 출력
- cp 복사원본 복사사본
- mv 복사원본 복사사본
- w : 서버에 접속한 사용자 출력 (tty는 콘솔, pts는 터미널)
- id : 자세한 자신의 정보 출력
- ; : 앞의 명령어가 실패해도 다음 명령어가 실행
- && : 앞의 명령어가 성공했을 때 다음 명령어가 실행
- & : 앞의 명령어를 백그라운드로 돌리고 동시에 뒤의 명령어를 실행
- | : 파이프라인
- grep : 특정 문자열을 선별할 때 사용 (중요하고 옵션이 많음)

## 마치며

git, 리눅스 상에서의 소켓 프로그래밍, gcc, vim 등을 그동안 사용하면서 공부했던 리눅스 배경지식과, 이번 F.T.Z의 training 과정에서 배웠던 내용들을 취합해서 보기 좋게 정리했다. 다음 포스팅에서는 본격적으로 F.T.Z에서 배운 내용을 정리할 예정이다.