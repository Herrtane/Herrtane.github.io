---
layout: post
title: <Network> 04. Data link layer (2) - DLC
date: 2020-09-06 12:10:23 +0900
category: Network
comments: true
---
이번 포스팅에서는 Data link layer에 대해서 나머지 내용을 다루어 보겠다. 

## Data link layer의 두 번째 역할 : Data Link Control(DLC)

이번 포스팅에서는 이어서 Data link layer의 두 번째 역할인 Data Link Control에 대해서 이야기해보려고 한다.

<br/>

지난 시간에서 MAC에 대해서 다루었었는데, MAC은 서로 다른 여러 기기가 통신하는 과정에서 생기는 충돌 문제를 해결하는 역할을 담당한다고 했었다. 그렇다면 충돌 문제가 해결된다면 더 이상 통신 문제에서 고려할 부분은 없는 것일까? 

<br/>

아직 한 가지 더 고려할 것이 남았는데, 바로 error와 flow의 문제이다. MAC을 통해서 한 기기가 통신을 성공적으로 시작했다고 하더라도, 그 기기에서 보낸 신호가 오류 없이 상대 기기로 무사히 전달될지는 미지수이다. 또한, 상대 기기로부터 무사히 전달받았다는 ACK메시지가 다시 무사히 도착할지도 역시 미지수이다. 이런 error를 검출하고 복구하며, 신호의 flow를 조절해주는 역할을 맡는 부분이 바로 DLC이다.

<br/>

참고로 **flow control**은 통신의 흐름을 조절해주는 것인데, 너무 빠르게 통신이 이루어지면 그 속도를 조절해주거나, error가 발생되었을 때는 잠시 통신을 중단시키는 등의 조절하는 것을 말한다.




![flow_control]({{site.url}}/img/flow_control.jpg)

DLC도 여러 방식으로 다시 나뉘어지는데, 아래와 같다.

1. 무잡음 채널에서의 프로토콜
    - Simple protocol
2. 잡음이 있는 채널에서의 프로토콜
    - Stop-and-Wait ARQ (파이프 라인이 1개)
    - Go-back-N ARQ (파이프 라인이 N개)
    - Selective Repeat ARQ (파이프 라인이 N개)

여기서 **파이프라인**이란, ACK를 받기 전에 보낼 수 있는 프레임의 개수를 의미한다. 쉽게 말해서, 한꺼번에 얼마만큼의 동시 송신이 가능하냐는 거다. 

**ARQ**란, 자동 반복 요청이라는 뜻으로, 송수신 하는 과정에서 오류가 발생하면 송신측에 재전송을 자동적으로 요청하는 것을 말한다.

<br/>

그렇다면, 이제 각각의 방식에 대해서 하나씩 살펴보자.

<br/>

## 1-1. Simple Protocol

이 방식은 간단하다. 송신하는 측에서 **frame(data link layer에서 주고받는 데이터)**을 전송하면, 수신하는 측에서 이를 받는 방식이다. 이 방식에서는 그 어떤 error, flow control도 진행되지 않는다. 말 그대로 이상적인 상황인 무잡음 상태에서 가능한 방식이다.

<br/>

## 2-1. Stop-and-Wait ARQ

이 방식부터는 이상적인 상황이 아니라, 실제 잡음이 존재하는 상황에서 오류가 발생할 수 있음을 염두에 두고 통신을 하는 방식이다. 

<br/>

이 방식도 어렵지 않다. Simple Protocol과 다르게, 이 방식에서는 frame을 송신하면 수신하는 측에서 무사히 전달받았다는 ACK메시지가 올 때까지 기다린다. 만약 정해진 시간 안에 ACK메시지가 오지 않으면, 중간 과정에서 오류가 발생했다고 인지하고 다시 frame을 전송하는 방식이다. 수신하는 측에서는 frame이 무사히 도착했다고 하더라도, 이 신호가 변질되지 않았는지 체크하기 위해서 CRC(두 번째 포스팅에서 다루었다)를 이용한다.

![stop_and_wait]({{site.url}}/img/stop_and_wait.jpg)

학기 중에 공부했던 파일이라 노란색 형광팬이 삐뚤삐뚤 그어져있으므로 양해 부탁드린다.. 세부적인 송수신 처리 과정(duplicate가 발생하는 것을 방지하기 위해 frame에 숫자를 붙이는 것)은 다루지 않겠다. 

<br/>

## 2-2. Go-back-N ARQ

<br/>

## 2-3. Selective Repeat ARQ

와우, 위의 두 과정을 말이 아닌 글로 포스팅하려니 시간이 조금 걸릴 듯 하다. 우선, 이번 포스팅의 전반적인 뼈대를 잡고 나서, 추후에 내용을 추가하도록 하겠다. 중요한 두 ARQ인 만큼 나중에라도 반드시 다룰 예정이다.

<br/>
<br/>

## 마치며

사실 Framing관련된 부분은 이 포스팅에서 다루지 않았다. Byte stuffing 이나 Bit stuffing같은 부분인데, 이 부분은 우선은 생략하도록 하겠다. 그보다는, 더 굵직하고 중요한 전반적인 DLC에 대해서 다루어보았다.

<br/>
다음 포스팅은 세 번째 계층인 Network Layer에 대해서 다루어볼 예정이다.
